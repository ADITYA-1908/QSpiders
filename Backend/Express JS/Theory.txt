ðŸ“Œ 1) What is Express.js?
Express.js is a web application framework for Node.js that helps you build web servers and RESTful APIs easily.
It simplifies handling routes, requests, and responses compared to plain Node.js.

ðŸš€ 2) Key Features of Express.js

-> Routing
Handles different HTTP methods like GET, POST, PUT, PATCH, and DELETE.

-> Middleware
Middleware functions can process incoming requests (e.g., authentication, logging, etc.).

-> JSON and Form Parsing
Built-in middleware like express.json() and express.urlencoded() helps parse JSON and form data.

-> Template Engines
Supports rendering dynamic HTML using engines like EJS, Pug, etc.

-> Error Handling
Allows customizable error-handling middleware for better control over application errors.

-> Static File Serving
Can serve static files (CSS, JS, images) using express.static().

-> Popular Companies Using Express.js:
Uber IBM Accenture Paypal

3) History of Express js 

-> Released: November 2010

-> Creator: TJ Holowaychuk, a prolific open-source developer.

->Current version 
    The current stable version is v.5.1.0 official released on march 31 2025

->Note:
    if we want to use express 5.1 version node js 18+ version required

4) What is a server in Express js 
In Express.js, a server is a program that listens for incoming HTTP requests from a browser or an API client and sends back HTTP responses.
Or
A server in Express.js is a Node.js application using the Express framework to listen on a specific port, receive client requests, and send appropriate responses.

5) What is a Request in Express.js?
In Express.js, a request (commonly written as req) is an incoming message from the client (such as a browser or mobile app) to the server.

The req object contains all the details about the client's request, such as:

URL â€“ Which route or endpoint the client is requesting

HTTP Method â€“ Type of request (GET, POST, PUT, etc.) and any attached data like JSON or form data

Headers & Cookies â€“ Metadata about the request such as content type, authentication tokens, and cookies


6) What is a Response in Express.js?
-> In Express.js, a response (commonly written as res) is the object that the server uses to send data back to the client after processing the request.
Or simply:
-> A response is what the server sends back to the client after receiving and processing the request.

-> You can send: Text,HTML,JSON,Images
Status Codes (like 200 OK, 404 Not Found, 500 Internal Server Error)
difrence between request and responce 


7) Difference Between Request and Response

| Feature   | Request (`req`)                          | Response (`res`)                               
| --------- | ---------------------------------------- | ---------------------------------------------- 
| Direction | From client to server                    | From server to client                     
| Content   | URL, HTTP method, headers, body, cookies | Text, JSON, HTML, images, status code, headers ex-res.send(),res.json()

Note:- For One req only one responce need to be send 